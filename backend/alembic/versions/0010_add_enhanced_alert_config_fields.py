"""add enhanced alert config fields

Revision ID: 0010
Revises: 0009
Create Date: 2025-01-21 15:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '0010_add_enhanced_alert_config_fields'
down_revision: Union[str, None] = '0009_add_multi_tenant_support'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 为 alert_configs 表添加新的增强配置字段
    op.add_column('alert_configs', sa.Column('min_points', sa.Integer(), nullable=False, default=1, comment='监测点数量阈值'))
    op.add_column('alert_configs', sa.Column('min_occurrences', sa.Integer(), nullable=False, default=1, comment='连续次数阈值'))
    op.add_column('alert_configs', sa.Column('trigger_mode', sa.String(length=10), nullable=False, default='OR', comment='逻辑模式(OR/AND)'))
    
    # 为 alerts 表添加新的触发信息字段
    op.add_column('alerts', sa.Column('trigger_type', sa.String(length=20), nullable=True, comment='触发类型(point_count/consecutive/both)'))
    op.add_column('alerts', sa.Column('trigger_mode', sa.String(length=10), nullable=True, comment='触发模式(OR/AND)'))
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 删除 alerts 表的新字段
    op.drop_column('alerts', 'trigger_mode')
    op.drop_column('alerts', 'trigger_type')
    
    # 删除 alert_configs 表的新字段
    op.drop_column('alert_configs', 'trigger_mode')
    op.drop_column('alert_configs', 'min_occurrences')
    op.drop_column('alert_configs', 'min_points')
    
    # ### end Alembic commands ###